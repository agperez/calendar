<% provide(:title, 'Calendar') %>

<!-- Reload the page (and therefore correctly places the events)
  if the user arrives here via the back button  -->
<input id="reloadValue" type="hidden" name="reloadValue" value="" />

<!-- Dialog text for a clicked event -->
<div id="event_click_dialog" title="Edit Existing Event">Would you like to edit or delete this event?</div>


<div id="create_event_dialog">
  <form>
    <fieldset>
    <label for="createBook">Book:</label>
    <input type="text" name="createBook" id="createBook" /><br>
    <label for="createChapter">Chapter:</label>
    <input type="text" name="createChapter" id="createChapter" /><br>
    <label for="createFirstVerse">First Verse:</label>
    <input type="text" name="createFirstVerse" id="createFirstVerse" /><br>
    <label for="createLastVerse">Last Verse:</label>
    <input type="text" name="createLastVerse" id="createLastVerse" /><br>
    <label for="createStart">Date:</label>
    <input type="text" name="createStart" id="createStart" /><br>
    </fieldset>
  </form>
</div>

<div id="select_add_dialog">
  <form>
    <fieldset>
    <label for="eventBook">Book:</label>
    <input type="text" name="eventBook" id="eventBook" /><br>
    <label for="eventChapter">Chapter:</label>
    <input type="text" name="eventChapter" id="eventChapter" /><br>
    <label for="eventFirstVerse">First Verse:</label>
    <input type="text" name="eventFirstVerse" id="eventFirstVerse" /><br>
    <label for="eventLastVerse">Last Verse:</label>
    <input type="text" name="eventLastVerse" id="eventLastVerse" /><br>
    </fieldset>
  </form>
</div>

<div class="col-lg-2 col-md-2 col-sm-3">
  <div id="toggleButtons">
    <button id="create_event_button">Create Event</button>
  </div>
</div>

<!-- Wrap for calendar -->
<div class="col-lg-10 col-md-10 col-sm-9">
  <!-- The Calendar -->
  <div id='calendar'></div>

  <!-- clearfix -->
  <div style='clear:both'></div>
</div>




<script>

  $(document).ready(function() {
    
    // Today's date stored to variables
    var date = new Date();
    var d = date.getDate();
    var m = date.getMonth();
    var y = date.getFullYear();           

//////////////////////////////////////////////////
    var select_add_event = function() {
      var book = $('#eventBook').val();
      var first_chapter = $('#eventChapter').val();
      var first_verse = $('#eventFirstVerse').val();
      var last_verse = $('#eventLastVerse').val();
      var start = global_start_date;
      var new_date = $.fullCalendar.formatDate(start, 'yyyy-MM-dd');
      
      $.create(
        '/sermons',
        { sermon: { book: book, sermon_date: new_date, first_chapter: first_chapter, first_verse: first_verse, last_verse: last_verse } },
        function (response) {
          $('#calendar').fullCalendar('renderEvent', {
            id: response.id,
            title: response.book + " " + response.first_chapter + ":" + response.first_verse + "-" + response.last_verse,
            allDay: true,
            start: start
          });
        }
      );
      $( this ).dialog( "close" );
    }

    $("#select_add_dialog").dialog({
      autoOpen: false,
      title: "New event",
      modal: true,
      height: 400,
      width: 500,
      buttons: {
        "Add Event": select_add_event
      }
    });
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    var create_event = function() {
      var book = $('#createBook').val();
      var first_chapter = $('#createChapter').val();
      var first_verse = $('#createFirstVerse').val();
      var last_verse = $('#createLastVerse').val();
      var start = new Date($('#createStart').val());
      var new_date = $.fullCalendar.formatDate(start, 'yyyy-MM-dd');
      
      $.create(
        '/sermons',
        { sermon: { book: book, sermon_date: new_date, first_chapter: first_chapter, first_verse: first_verse, last_verse: last_verse } },
        function (response) {
          $('#calendar').fullCalendar('renderEvent', {
            id: response.id,
            title: response.book + " " + response.first_chapter + ":" + response.first_verse + "-" + response.last_verse,
            allDay: true,
            start: start
          });
        }
      );
      $( this ).dialog( "close" );
    }


    $("#create_event_button").click(function() {
      $("#create_event_dialog").dialog("open");
      $('#createStart').datepicker();
    }); 


    $("#create_event_dialog").dialog({
      autoOpen: false,
      modal: true,
      title: "Create a New Event",
      buttons: {
        "Create Event": create_event
      },
      height: 500,
      width: 300
    });
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    // Dialog Box for when an event is clicked. 
    $( "#event_click_dialog" ).dialog({ 
      autoOpen: false,
      width: 400,
      buttons: [
        
        // Edit Button 
        {
          text: "Edit",
          click: function() {
            // Creates a link to the edit_sermon_path
            var event_url = '/sermons/' + globalevent_id + '/edit';
            window.location.href = event_url;
          }
        },

        // Destroy Button
        {
          text: "Delete",
          click: function() {

            // 1. Destroys the event in the RAILS DATABASE using $.destroy (jquery.rest.js)
            $.destroy({
              url: '/sermons/' + globalevent_id
            });
            
            // 2. Removes the event object from the CALENDAR.
            $('#calendar').fullCalendar('removeEvents', globalevent_id);
            $( this ).dialog( "close" );
          }
        }
      ]
    });
//////////////////////////////////////////////////
//////////////////////////////////////////////////
    // Initiate the Calendar
    $('#calendar').fullCalendar({
      editable: true,
      selectable: true,
      


      //Action for when a day of the week is clicked:
      select: function(start, end, allDay) {
        global_start_date = start;
        $('#select_add_dialog').dialog('open');
      },


      // Action for when an event is drag-and-dropped on a new date:
      eventDrop: function(event,dayDelta,minuteDelta,allDay,revertFunc) {
        var event_id = parseInt(event.id);
        var event_start = $.fullCalendar.formatDate(event.start, 'yyyy-MM-dd');
        
        // Update the event date in the RAILS DATABASE via $.update (jquery.rest.js)
        $.update(
            '/sermons/' + event_id,
            { sermon: {sermon_date: event_start, id: event_id} }
          );

        // Update the event date in the CALENDAR event object
        $('#calendar').fullCalendar('updateEvent', event);
      },

      // Action for when an event is clicked:
      eventClick: function(event, jsEvent, view) {
        var event_id = parseInt(event.id);
        globalevent_id = event_id;

        // Open the dialog box with id="event_click_dialog"
        $( "#event_click_dialog" ).dialog( "open" );
      }
    }); 

    var add_set = function(event_set) {
      $('#calendar').fullCalendar( 'addEventSource', event_set );
    }

    <% @books.keys.each do |book| %>
      var <%= book %> = [       
        <% @books[book].each do |sermon| %>
          {
            // When creating a new event, store SERMON ATTRIBUTES in the attributes of the CALENDAR EVENT OBJECT...
            // ... this way we can use these values later to identify the sermon when calling $.update and $.destroy
            id: '<%= sermon.id %>',
            title: '<%= sermon_title(sermon) %>',
            start: new Date(<%= sermon.sermon_date.strftime("%Y") %>, <%= sermon.sermon_date.strftime("%m") %>-1, <%= sermon.sermon_date.strftime("%d") %>),
            color: '<%= sermon.color %>'      
          },
        <% end %>
      ]
      add_set(<%= book %>);

      $('<button/>', {
        text: "<%= book %>", 
        id: 'btn_<%= book %>_off',
        class: '<% case @books[book].first.color %><% when "#59BA53" %>cupid-green<% when "#9FE1E7" %>cupid-light-blue<% when "#F8B0C8" %>cupid-pink<% when "#FCF0AD" %>cupid-yellow<% when "#9FC6E7" %>cupid-blue-gray<% when "#4986E7" %>cupid-blue<% when "#9A9CFF" %>cupid-purple<% when "#FFAD46" %>cupid-orange<% when "#D06B64" %>cupid-red<% else %>cupid-gray<% end %>',
        click: function () { 
          $('#btn_<%= book %>_off').toggle(0, function() {
            $('#btn_<%= book %>_on').toggle(0);
            $("#calendar").fullCalendar( 'removeEventSource', <%= book %> );
          });
        }
      }).appendTo('#toggleButtons');

      $('<button/>', {
        text: "<%= book %>", 
        id: 'btn_<%= book %>_on',
        class: '<% case @books[book].first.color %><% when "#59BA53" %>cupid-green<% when "#9FE1E7" %>cupid-light-blue<% when "#F8B0C8" %>cupid-pink<% when "#FCF0AD" %>cupid-yellow<% when "#9FC6E7" %>cupid-blue-gray<% when "#4986E7" %>cupid-blue<% when "#9A9CFF" %>cupid-purple<% when "#FFAD46" %>cupid-orange<% when "#D06B64" %>cupid-red<% else %>cupid-gray<% end %>',
        click: function () { 
          $('#btn_<%= book %>_on').toggle(0, function() {
            $('#btn_<%= book %>_off').toggle(0);
            $("#calendar").fullCalendar( 'addEventSource', <%= book %> );
          });
        }
      }).appendTo('#toggleButtons').hide();      
    <% end %>

//////////////////////////////////////////////////
//////////////////////////////////////////////////

 });

</script>